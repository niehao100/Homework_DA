module alu(A,B,ALUFun,Sign,Z)
input [31:0]A,B;
input [5:0]ALUFun;
input Sign;
output [31:0]Z;
wire Z,V,N;
wire [31:0]B_tmp,addS,cmp;
assign B_tmp=(ALUFun[3]==1'b1)?32'b0:B;
ALUadd add(.A(A),.B(B_tmp)),.Sign(Sign),ALUFun(ALUFun[1]),.Z(Z),.V(V),.N(N),.addS(addS));
Alucmp cmp(.Z(Z),.V(V),.N(N),.ALUFun(ALUFun[3:1]),.cmp(cmp);

always@(*) begin
    case ALUFun[5:4]
        2'b00: Z~=addS;
        2'b11: Z~=cmp;
    endcase
end
endmodule
